class Solution {
public:
    int mod=1e9+7;
    int dp[1001][5000];
    int helper(int start,int end,int k,int curr){
        if(k==0){
            if(curr==end) return 1;
            return 0;
        }
        if(dp[k][curr+1000] !=-1)return dp[k][curr+1000];
        int step=0;

        step=(helper(start,end,k-1,curr+1)%mod)+(helper(start,end,k-1,curr-1)%mod);
        return dp[k][curr+1000]=step%mod;
    }
    int numberOfWays(int startPos, int endPos, int k) {
        memset(dp,-1,sizeof(dp));
        return helper(startPos,endPos,k,startPos)%mod;
    }
};
